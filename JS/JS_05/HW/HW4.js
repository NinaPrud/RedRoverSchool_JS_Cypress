//Home Work _4
//Выведете с помощью for цикла рецепт всех видов кофе  или цену на все размеры стаканчиков, идеально и то, и другое.

//см. файл HW4cupofCoffee_loop.js

//=======================2.При помощи цикла for выведите чётные числа от 2 до 10
/*
    // первый способ
for(let i = 2; i <= 10; i ++){
    if(i % 2 == 0){
         console.log(i)
        }
}

    // второй способ
for(let i = 2; i <= 10; i+=2){
    console.log(i)
}
*/

/*
======================3.Натуральное число, большее 1, называется простым, если оно ни на что не делится, кроме себя и 1.
Другими словами, n > 1 – простое, если при его 
делении на любое число кроме 1 и n есть остаток.
Например, 5 это простое число, оно не может быть разделено без остатка на 2, 3 и 4.
Напишите код, который выводит все простые числа из интервала от 2 до n.
Для n = 10 результат должен быть 2,3,5,7.
*/

//---------------1
// let n = 10
// let a = 0
// for(let i = 2; i <= n; i ++){
//     for(let k = 2; k < i; k++){
//         if (i % k == 0){
//             a += 1
//         }
//     }
//         if (a == 0){
//         console.log(i)
//     }
//     else { a = 0}
// }

//------------2 //можно использовать continue
// let n = 10
// nextPrime:   // метка
// for (let i = 2; i <= n; i++) {
//     for (let j = 2; j < i; j++) {
//         if (i % j == 0) continue nextPrime; // если нет, иди дальше
//     }
//     console.log(i);
// }

//----------- 3 либо
// let n = 17
// for(let i = 2; i <= n; i ++){
//     let num = true
//     for(let k = 2; k < i; k++){
//         if (i % k == 0){
//             num = false
//         }
//     }
//         if (num == true){
//         console.log(i)
//     }
// }

//---------- еще можно перебором if else(см. видео HW4 3:20)

/*
 ==================4.Задача на смекалку
Имеется зашифрованное предложение 
“Ybrobrubr brabrrbrebr brtbrhbrebr brbbrebrsbrtbr brQbrAbr brebrvbrebrrbr”
мы знаем, что оно означает “You are the best QA ever”.
Нам нужно придумать программу дешифратор.
*/

// let str = "Ybrobrubr brabrrbrebr brtbrhbrebr brbbrebrsbrtbr brQbrAbr brebrvbrebrrbr"
// let space = ""
// for(let i = 0; i < str.length; i+=3){
//     space = space + str[i]   // space += str[i]
// }
// console.log(space)

/* 
5.Задачка посложнее* 
 Придумайте свой собственный шифр, а также программу, которая будет шифровать и затем дешифровщик к нему
*/

// let mess = "Сегодня солнце светит ярко, дождя не будет!";
// let key = "Мортаделла";
// let encrMess = "";
// let countE = 0;
// let countI = 0;

// for (let i = 0; i < mess.length; i++) {
//     for (let e = 0; e < key.length; e++) {
//         if (i == e) {
//             encrMess += mess[i] + key[e];
//             key += key[e]
//         }
//     }
// }
// console.log(key);
// console.log(encrMess);

// дешифратор

// let decrMess = "";
// for (let i = 0; i < encrMess.length; i+= 2) {
//     decrMess += encrMess[i];
// }
// console.log(decrMess);

/*
 6.Задача с интервью*
У вас есть массив со скобками, предположим 
[ ‘(‘, ‘)’, ‘(‘, ‘)’, ‘)’] количество элементов и последовательность может быть разной.
Нужно выяснить, у каждой ли скобки есть соответствующая пара (открывающая и закрывающая).
*/

//let arr = ['(', '(', ')', ')', '(', '(']
let arr = ["(", "(", ")", ")", "(", "(", ")", ")", "(", ")", 4, "h"];
let a = 0;
let b = 0;
for (let i = 0; i < arr.length; i++) {
    if (arr[i] == "(") {
        a++; // a += 1          //увеличит а на колво раз, сколько увидит ее
    } else if (arr[i] == ")") {
        b++; // b += 1
    }
}
console.log(`количество '(' = ${a}, количество ')' = ${b}`);

if (a == b) {
    console.log("скобки закрыты");
} else {
    console.log("скобки не закрыты");
}

// ================================ вариант 2 - подходит, если '(' и ')' должны следовать др. за другом
// console.log('********************************************************')

// let arr2 = [ "(",")","(",")",")","(",")","(",")",")","(",")"]
// let sum = 0

// for(i = 0; i < arr2.length; i++){
// if (arr2[i] == "(" && arr2[++i] == ")" ){
//     sum = sum + 1

//        console.log(sum + " скобки закрыты")

// } else {
//        console.log( sum + 1 + " скобки не закрыты" )}
// }
